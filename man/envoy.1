.TH envoy "1" "July 27" "envoy" "User Commands"
.SH NAME
envoy \- authentication agent controller
.SH SYNOPSIS
\fBenvoy\fP [options] [keys]
.SH DESCRIPTION
\fBenvoy\fP is the client side to \fBenvoyd\fP(1). It connects to the
daemon and gets all the information associated with the current running
agent. It can then do things like add new keys to the agent or output
shell code to inject these variables into a shell.

This effectively allows a user to share a single long-running
authentication agent between all shells and sessions in a clean and
managed fashion that doesn't clutter user login sessions.
.SS Sourcing Environmental Variables
To connect/source the environmental variables...
.IP
.nf
envoy -t ssh-agent [key ...]     # gpg-agent also supported
source <(envoy -p)
.fi
.PP
.SH OPTIONS
.PP
.IP "\fB\-h\fR, \fB\-\-help\fR"
Display help message.
.IP "\fB\-v\fR, \fB\-\-version\fR"
Display version information.
.IP "\fB\-a\fR, \fB\-\-add\fR"
Add private key identities to the authentication agent using
\fBssh-add\fR(1). Note that when passing in keys, if they reside in
\fI~/.ssh/\fR, then just providing the filename is sufficient.
.IP "\fB\-k\fR, \fB\-\-clear\fR"
For gpg-agent only, flush all cached passphrases and, if the program has
been started with a configuration file, reload it. Sends \fISIGHUP\fR to
the running agent.
.IP "\fB\-K\fR, \fB\-\-kill\fR"
Terminate the running agent. Sends \fISIGTERM\fR to the running agent.
.IP "\fB\-l\fR, \fB\-\-list\fR"
Lists fingerprints of all identities currently represented by the agent.
.IP "\fB\-u\fR[\fIPASSWORD\fR], \fB\-\-unlock\fR\fB=\fR[\fIPASSWORD\fR]
For gpg-agent only, unlock the agent's keyrings. The password will be
prompted for if its not optionally provided. This requires that
\fIallow-preset-passphrase\fR is set in your \fIgpg-agent.conf\fR to
work.
.IP "\fB\-p\fR, \fB\-\-print\fR"
Print out the environmental variables associated with the running agent.
Useful for injecting these variables into the shell.
.IP "\fB\-s\fR, \fB\-\-sh\fR"
Print sh-style commands when outputting environmental variables.
.IP "\fB\-c\fR, \fB\-\-csh\fR"
Print csh-style commands when outputting environmental variables.
.IP "\fB\-f\fR, \fB\-\-fish\fR"
Print fish-style commands when outputting environmental variables.
.IP "\fB\-t\fR \fIAGENT\fR, \fB\-\-agent\fR\fB=\fR\fIAGENT\fR"
Set the agent type to launch. If this isn't set, its up to \fBenvoyd\fR
to decide which agent is launched. \fIssh-agent\fR and \fIgpg-agent\fR
are supported agents.
.SH ENVIRONMENT
.PP
.IP \fBENVOY_SOCKET\fR
Both \fBenvoyd\fP and \fBenvoy\fP use this environment variable for the
location of the unix domain socket for communication. Prefixing the
socket with a @ denotes an abstract namespace. The default socket is
\fI@/vodik/envoy\fR.
.SH AUTHORS
.nf
Simon Gomizelj <simongmzlj@gmail.com>
.fi
.SH SEE ALSO
\fBenvoyd\fR(1),
\fBenvoy-exec\fR(1),
\fBssh-agent\fR(1),
\fBssh-add\fR(1),
\fBgpg-agent\fR(1)
